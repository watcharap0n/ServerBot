# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#   PROD:

#     runs-on: ubuntu-latest
#     environment: PROD

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.9.6
#       uses: actions/setup-python@v2
#       with:
#         python-version: "3.9.6"

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#     - name: Unit Test
#       env:
#         HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
#         PYTHONPATH: ${{ secrets.PYTHONPATH }}
#         apiKey: ${{ secrets.APIKEY }}
#         authDomain: ${{ secrets.AUTHDOMAIN }}
#         databaseURL: ${{ secrets.DATABASEURL }}
#         projectId: ${{ secrets.PROJECTID }}
#         storageBucket: ${{ secrets.STORAGEBUCKET }}
#         messagingSenderId: ${{ secrets.MESSAGINGSENDERID }}
#         appId: ${{ secrets.APPID }}
#         measurementId: ${{ secrets.MEASUREMENTID }}
#         type: ${{ secrets.TYPE }}
#         project_id: ${{ secrets.PROJECT_ID }}
#         private_key_id: ${{ secrets.PRIVATE_KEY_ID }}
#         private_key: ${{ secrets.PRIVATE_KEY }}
#         client_email: ${{ secrets.CLIENT_EMAIL }}
#         client_id: ${{ secrets.CLIENT_ID }}
#         auth_uri: ${{ secrets.AUTH_URI }}
#         token_uri: ${{ secrets.TOKEN_URI }}
#         auth_provider_x509_cert_url: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
#         client_x509_cert_url: ${{ secrets.CLIENT_X509_CERT_URL }}
#         MONGODB_URI: ${{ secrets.MONGODB_URI }}

#       run: |
#         pip list
#         pytest -v


  Deployment:

    runs-on: ubuntu-latest
    environment: DEPLOY
    steps:
    
      - name: Build, Push and Release a Docker container to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3 
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_TOKEN }}
          heroku_app_name: ${{ secrets.HEROKU_SERVER_NAME }}

          dockerfile_directory: .
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web
    
      
          

